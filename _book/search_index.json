[["index.html", "Portfolio DataScience for Biology 1 Introductie portfolio", " Portfolio DataScience for Biology Anna van Donkersgoed 2025-05-22 1 Introductie portfolio Mijn naam is Anna van Donkersgoed en ik ben derdejaars student Life Sciences aan de Hogeschool Utrecht. Ik volg een minor Data Science for Biology waarbij dit portfolio hoor. In dit portfiolio neem ik jullie mee met de dingen die ik tijdens dit vak geleerd heb en mijn toekomstige plannen. "],["cirriculum-vitea.html", "2 Cirriculum Vitea", " 2 Cirriculum Vitea Mijn naam is Anna en ik ben derdejaars bachelor student Life Sciences aan de Hogeschool Utrecht met een specialisatie in Microbiologie en een minor in Data Sciences. Ik ben sociaal, gemotiveerd en nieuwsgierig en kijk er erg naar uit om praktijkervaring op te doen. Contactgegevens Naam: Anna van Donkersgoed Mail: anna.vandonkersgoed@student.hu.nl Talen Nederlands (moedertaal) Engels Opleidingen Jaar Diploma School Plaats 2020-heden Life Sciences Hogeschool Utrecht Utrecht, Nederland 2021 propedeuse Life Scieces Hogeschool Utrecht Utrecht, Nederland 2015 - 2020 HAVO Anna van Rijn college Nieuwegein, Nederland Technieken en vaardigheden MALDI-TOF PCR Vitek Bacteriekweek + anaëroob kweken MIC bepaling Celkweek NGS data verwerken Metagenomics data verwerken R bash Excel Project ervaringen Project Parodontitis Onderzoek naar naar binding van Porphyromonas gingivalis aan verschillende oppervlakten (o.a. Streptococcus gordonii) Effect van ijzer op bacteriële binding Toepassing van anaërobe techieken (bactron600) Ontwikkeling van flexibiliteit in onderzoeksaanpak Project Antimicrobiële resistentie Ontwikkeling van een bioinformatica pipeline voor analyse van antimicrobiële resistentie. Data visualisatie d.m.v. een interactieve R Shiny app. Toepassing van GitHub Projectplanning en samenwerken in een Agile omgeving Werkervaring Jaar Functie Bedrijf Plaats 2022 - 2024 Horecamedewerker DE KOM, stadstheater en kunstencentrum Nieuwegein, Utrecht 2021 - 2022 Horecamedewerker de Kraam Nieuwegein, Utrecht 2019 - 2021 Vakkenvuller Boon’s mark Makadocenter, Nieuwegein Vrijwilligerswerk Jaar Vrijwilliger Organisatie Plaats 2021 - heden Leiding, leeftijd 7 tot 12 jaar Scouting Jan van Hoof Nieuwegein, Utrecht 2019 - 2021 Leiding, leeftijd 5 tot 7 jaar Scouting Jan van Hoof Nieuwegein, Nieuwegein Competenties: Flexibel Oplossingsgericht Samenwerken Organiseren "],["plan-voor-de-toekomst..html", "3 Plan voor de toekomst.", " 3 Plan voor de toekomst. In dit gedeelte van het portfolio laat ik zien wat mijn plannen zijn voor de toekomst. In 2 jaar zie ik mezelf werken voor een bedrijf wat microbiologie en datascience combineert. Het lijkt mij erg interessant om onderzoek te doen naar de microbiota en te kijken naar wat voor interacties micro-organismen met elkaar aan kunnen gaan. Hierbij lijkt het me leuk om zelf het protocol uit te voeren en de verkregen data te verwerken. Een paar technieken die ik daarbij wil gebruiken zijn het analyseren van afbeeldingen via R, mutatie analyses voor de fylogenie van bacteriën en het identificeren van bacteriën d.m.v. technieken zoals metagenomics. Om dit doel te bereiken heb ik als specialisatie microbiologie gedaan en als minor datascience. Hierbij heb ik meer inzicht gekregen over hoe projecten het best opgesteld kunnen worden en hoe data goed en reproduceerbaar uitgewerkt moet worden. Ik heb R en bash geleerd en ik heb geleerd hoe metagenomics data uitgewerkt moet worden. Om in de toekomst in het werkvel werken moet ik nog wel wat vaardigheden bereiken. Er zijn nog wat vaardigheden die me interessant lijken om in de toekomst te leren. Hieronder vallen eiwit modulering, mutatie analyses, anitlichaam ontwerp. Ik wil begonnen zijn om deze vaardigheden te leren aan het eind van mijn studie. Dit wil ik bereiken door online veel informatie op te zoeken, data te downloaden en ermee te gaan oefenen. "],["image-analysis.html", "4 Image analysis 4.1 Afbeelding analyseren d.m.v. EBImage", " 4 Image analysis Image analysis is een techniek in R om afbeelding te analyseren op veel verschillende dingen. In dit gedeelte ga ik kijken op welke manieren afbeeldingen geanalyseerd kunnen worden, wat het verschil is tussen de manieren en ga ik fluorescentie afbeeldingen analyseren. Dit omdat ik deze techniek ook ga gebruiken op mijn stage. 4.1 Afbeelding analyseren d.m.v. EBImage Er zijn verschillende manieren waarmee afbeeldingen geanalyseerd kunnen worden met R. Met de EBImage package kunnen afbeeldingen worden geanalyseerd, ook op basis van pixels. Tijdens dit voorbeeld wordt er gekeken naar het verschil tussen S. gordonii die een uur en twee uur geïncubeerd is in een welletje van een 24 wells plaat. De eerste stap is om de afbeelding in te laden. ## Image ## colorMode : Color ## storage.mode : double ## dim : 411 426 3 ## frames.total : 3 ## frames.render: 1 ## ## imageData(object)[1:5,1:6,1] ## [,1] [,2] [,3] [,4] [,5] [,6] ## [1,] 0.6980392 0.7098039 0.7215686 0.7450980 0.7725490 0.7725490 ## [2,] 0.7725490 0.7490196 0.7411765 0.7568627 0.7607843 0.7294118 ## [3,] 0.7372549 0.7411765 0.7490196 0.7607843 0.7490196 0.7333333 ## [4,] 0.7215686 0.7607843 0.7686275 0.7294118 0.7019608 0.7254902 ## [5,] 0.7450980 0.7568627 0.7372549 0.6862745 0.6705882 0.7215686 Om het verschil tussen de pixels goed te kunnen zien wordt de afbeelding zwart en wit gemaakt. Hierbij hebben de pixels een waarde van 0 of 1. Nu is het interessant om te kijken of er een groot verschil is in cellen bij een incubatie van 1 uur versus een incubatie van 2 uur. ## [1] 469 Er zijn dus bij een incubatie van 2 uur meer cellen dan bij 1 uur met een verschil van 1,1 procent. "],["reproduceren-van-een-data-analyse.html", "5 Reproduceren van een data analyse", " 5 Reproduceren van een data analyse Het is belangrijk voor data om reproduceerbaar te zijn. De data van een uitgevoerd experiment wordt geanalyseerd om te laten zien dat de data reproduceerbaar is. In het experiment wat gebruikt wordt voor deze opdracht zijn C.elegans nematoden bloodgesteld aan verschillende concentraties van verschillende stoffen. Het doel van het experiment is om te kijken wat het effect van de bepaalde stof is op het aantal nakomelingen van de C.elegans. Het aantal nakomelingen werden geteld en in een dataset geplaatst. De data uit het experiment wordt in deze opdracht geanalyseerd. Het experiment is uitgevoerd door J. Louter (INT/ILC) en de data is afkomstig van het HU lectoraat Innovative Testing in Life Sciences &amp; ChemistryDe data die relevant is voor de uitwerking zijn: De ruwe data, “RawData” Naam van de stof, “compName” Concentratie van de stof, “compConcentration” De eerste stap van de analyse is om het verkregen Excel door R te laten inlezen. Celegans_dataset &lt;- read_excel(here::here(&quot;data-raw&quot;, &quot;Data010&quot;, &quot;CE.LIQ.FLOW.062_Tidydata.xlsx&quot;), sheet = 1) Na het inlezen van de data wordt de data gecontroleerd op het type. str(Celegans_dataset) Er zijn een paar data type die veranderd moeten worden. De ruwe data is als double maar moet een integer worden aangezien het hele getallen zijn. De concentratie is als character weergeven maar moet als numeric omdat het decimalen heeft. Als laatst moet de naam van de stof worden veranderd naar een factor omdat het categorische data is. #RawData veranderen van dbl naar int Celegans_dataset$RawData &lt;- as.integer(Celegans_dataset$RawData) #compName veranderen van character naar factor Celegans_dataset$compName &lt;- as.factor(Celegans_dataset$compName) #compConcentration veranderen van character naar numeric Celegans_dataset$compConcentration &lt;- as.numeric(Celegans_dataset$compConcentration) #Verwijder NA waarden Celegans_dataset_no.na &lt;- Celegans_dataset %&gt;% filter(!is.na(RawData)) Na het veranderen van de data wordt de data tegen elkaar uitgezet in een grafiek. #Om ervoor te zorgen dat de dataset niet door 0 heen gaat voor de output van de grafiek Celegans_dataset_no.na$compConcentration_offset &lt;- Celegans_dataset_no.na$compConcentration + 0.001 #Plot met de aangepaste C.elegans data met het gebruik van geom jitter Celegans_plot &lt;- ggplot(data = Celegans_dataset_no.na, aes(x = compConcentration_offset, y = RawData)) + geom_jitter(aes(color = compName, shape = expType), size = 3, alpha = 0.8, width = 0.1, height = 0) + scale_x_log10(labels = label_log(digits = 2)) + labs(title = &quot;Aantal nakomelingen C.elegans na incubatie&quot;, subtitle = &quot;Aantal nakomelingen van de C.elegans na de incubatie met verschillende stoffen&quot;, y = &quot;Aantal nakomelingen&quot;, x = &quot;Log 10 concentratie (nM) &quot;) + theme_classic() Celegans_plot Uit de bovenstaande grafiek is te zien dat de positieve controle voor het experiment Ethanol is en de negatieve controle S-medium. Dit kan ook gecheckt worden met de volgende code: #Check wat de negatieve controle is voor het experiment Celegans_dataset_no.na %&gt;% filter(expType == &quot;controlNegative&quot;) %&gt;% select(compName) %&gt;% slice(1) ## # A tibble: 1 × 1 ## compName ## &lt;fct&gt; ## 1 S-medium #check wat de positieve controle is voor het experiment Celegans_dataset_no.na %&gt;% filter(expType == &quot;controlPositive&quot;) %&gt;% select(compName) %&gt;% slice(1) ## # A tibble: 1 × 1 ## compName ## &lt;fct&gt; ## 1 Ethanol #Voor de output wordt het slice command gebruikt, dit command is niet optioneel. Het nut van de verschillende controles: Positieve controle: De positieve controle is de conditie waarbij er een positief resultaat wordt verwacht. In dit geval zal de controle wel een effect hebben op het aantal nakomelingen van de C.elegans Negatieve controle: De negatieve controle is de conditie waarbij er een negatief resultaat wordt verwacht. In dit geval zal de negatieve controle geen effect hebben op het aantal nakomelingen van de C.elegans Vehicle controle: De vehicle controle geeft aan of de substantie waarmee de getetste stoffen zijn opgelost invloed heeft op het experiment. Normalisatie: Als laatste stap wordt de data genormaliseerd op een manier waardoor de negatieve controle gelijk is aan 1 en de rest wordt uitgedrukt als een fractie daarvan. Dit wordt gedaan zodat de data makkelijker kan worden vergeleken met de negatieve controle om een verschil te zien in de grafiek. Eerst wordt de data veranderd zodat de negatieve controle gelijk is aan 1 en de ander data een fractie daarvan. #Berekenen van het gemiddelde van de negatieve controle Celegans_negative &lt;- Celegans_dataset_no.na %&gt;% filter(expType == &quot;controlNegative&quot;) mean_control_negative &lt;- mean(Celegans_negative$RawData) #Gemiddelde van de negatieve controle is 85.9 Celegans_dataset_norm &lt;- Celegans_dataset_no.na #Zorg ervoor dat de data 1 is door alle waarden door het gemiddelde te delen Celegans_dataset_norm$RawData &lt;- (Celegans_dataset_norm$RawData / mean_control_negative) Daarna wordt er een grafiek gemaakt van de genormaliseerde data. Celegans_dataset_norm$compConcentration_offset &lt;- Celegans_dataset_norm$compConcentration + 0.001 Celegans_plot_normalized &lt;- ggplot(data = Celegans_dataset_norm, aes(x = compConcentration_offset, y = RawData)) + geom_jitter(aes(color = compName, shape = expType), size = 3, alpha = 0.8, width = 0.1, height = 0) + scale_x_log10(labels = label_log(digits = 2)) + labs(title = &quot;Fractie van aantal nakomelingen C.elegans na incubatie&quot;, subtitle = &quot;Aantal nakomelingen van de C.elegans na de incubatie met verschillende stoffen&quot;, y = &quot;Fractie aantal nakomelingen&quot;, x = &quot;Concentratie (nM) &quot;) + theme_classic() Celegans_plot_normalized Om de data verder te analyseren en om een conclusie te kunnen trekken moeten er nog een paar stappen gebeuren: Om de verschillende stoffen met elkaar te vergelijken en om te weten of er een significant verschil is wordt er een ANOVA test gedaan. Voordat de test gedaan word wordt eerst de data geplot in een bargraph met de standaardvariatie erbij om alvast een beeld te krijgen over de data. Daarna wordt de data gecontroleerd op normaliteit doormiddel van een Shapiro-Wilk test. Als de data normaal verdeeld is kan er een ANOVA test worden uitgevoerd Als er een significant verschil is in een groep wordt er een Post hoc test uitgevoerd om te kijken over welke stof het gaat. "],["data-management.html", "6 Data management 6.1 RNA sequencing folderstructuur 6.2 Portfolio folderstructuur", " 6 Data management Het is belangrijk om bewust bezig te zijn met data en datastructuren. Hierbij speelt de Guerilla analytics principles een grote rol. Een paar voorbeelden van deze principes zijn het goed ordenen van data, alles automatiseren met code, reproducirbaar werken en een version control gebruiken zoals Git en Github. Hier zijn de eerst genoemde principe uitgebeeld, het goed en duidelijk ordenen van data. Dit is erg belangrijk om bestanden niet kwijt te raken en een goed overzicht te houden. 6.1 RNA sequencing folderstructuur Tijdens het eerste deel van de minor DSFB is er gewerkt met RNA sequencing data. Deze bestanden zijn in de onderstaande afbeelding gesorteerd volgens het principe. Hierbij is ook een README bestand aanwezig. Figure 6.1: Folder tree, Daur2 indeling van bestanden Figure 6.2: Daur2 README 6.2 Portfolio folderstructuur De regels van de Guerilla analytics worden ook toegepast op de repository van dit portfolio. "],["reproduceerbaarheid.html", "7 Reproduceerbaarheid 7.1 Reproduceerbaarheid Open peer review 7.2 Reproduceerbaarheid R project", " 7 Reproduceerbaarheid 7.1 Reproduceerbaarheid Open peer review In deze opdracht wordt er gekeken naar reproduceerbaarheid. Reproduceerbaarheid is erg belangrijk om onderzoeken betrouwbaar te maken en om samen te werken. Om kennis over reproduceerbaarheid te laten zien wordt er een zelf uitgezocht artikel beoordeeld doormiddel van de Repita criteria om te kijken of dit artikel reproduceerbaar is. Beoordeelde artikel: link Naam van beoordeelde artikel: Testing the effectiveness of a commercially sold probiotic on restoring the gut microbiota of honey bees: a field study Beoordeling: Transparency cirteria Response Type Study Purpose Yes Data Availability Statement Yes Data Location Online Study Location Yes, Dallas, North Carolina &amp; Greensboro, NC Author Review Tier 3, Author used institutional email address as primary contact. Ethics Statement No Funding Statement Yes Code Availability No Testing the effectiveness of a commercially sold probiotic on restoring the gut microbiota of honey bees: a field study In Amerika krijgen bijen antibiotica (Terra-Pro) tegen bacteriën die ziektes veroorzaken zoals de bacteriën Paenibacillus larvae en Melissococcus plutonius. Echter is deze antibiotica slecht voor darm gezondheid van de bij. Het zorgt er onder andere voor dat het immuun systeem minder goed werkt. Om de darmgezondheid te verbeteren wordt probiotica (DFM) gebruikt. Het doel van het experiment is om te kijken of probiotica een significant effect heeft op de darm gezondheid van de bij na het gebruik van antibiotica. De hypothese is dat de darmmicrobiota van honingbijen niet wordt hersteld door DMF na het gebruik van antibiotica vanwege het gebrek aan inheemse bacteriën van de honingbij in de probiotica. Dit werd getest door 9 bijenkorven te gebruiken die zijn opgedeeld in 3 groepen. Groep 1 is de controle groep met geen toevoeging van een stof. Groep 2 heeft Terra-pro gekregen en groep 3 heeft Terra-pro met DMF gekregen. Er werden op week 0, 1 en 2 monsters genomen van 15 bijen uit elke korf. Daarna werden de darmen van de monsters geëxtraheerd. Vervolgens werd er PCR voor amplificatie van het DNA uit de darm gebruikt gevolgd door een sequence analyse en een qPCR om de abundantie van de bacteriën te kunnen bepalen. . Op de verkregen data werd een taxonomy classifier gebruikt. De controle groep heeft significant een verschil in phylogenetische diversiteit vergeleken met de Terra-pro en Terra-pro + DMF groepen. Ook heeft de controlegroep een afnamen in AV’s. De Terra-pro groep heeft een hogere abundantie en de Terra-pro met DMF heeft een lagere abundantie. Verschillen in de relatieve abundantie zijn een afname in Snodgrassella in de Terra-pro en Terra-pro + DMF groepen en een toename in Lactobacillus in de Terra-pro groep. DMF probiotica bacteriën zijn niet gevonden in de monsters van de darmen van de bijen. Figure 7.1: Average relative abundance Er is geconcludeerd dat in theorie probiotica een belovende oplossing is in de gezondheid van de bij als er inheemse bacteriën van de bijen in de probiotica voorkomen. 7.2 Reproduceerbaarheid R project Reproduceerbaarheid R project Om reproduceerbaarheid verder in deze opdracht te laten zien wordt er gekeken naar een uitgekozen R code project. Dit project bevat een Rmarkdown document en een dataset. Het Rmarkdown document wordt doorgenomen om te kijken of alles werkt. Gekozen project: COVID-19 Vaccine paper Link naar project Problemen bij het Rmarkdown bestand: Bij de read.csv moet de here::here functie gebruikt worden om het bestand in te lezen ipv de hele pathway Warning in de data: string 8 en 257 zijn invalid. Er zitten karakters bij die niet numeric zijn. Hiervoor moeten de kolommen van datatype worden veranderd. Daarvoor is de volgende code gebruikt: data &lt;- data %&gt;% mutate(Age = gsub(“[^0-9]”, ““, Age), Income = gsub(”[^0-9]“,”“, Income)) Bij de ggsave command weer een pathway genoemd ipv een here::here command Weinig waarden in het bestand. Veel mist waardoor de grafieken niet gemaakt kunnen worden. Ik geef de reproduceerbaarheid van de data een 1 aangezien het mij niet is gelukt om het project te visualiseren. Dit komt doordat er veel data mist en de data die er is niet helemaal klopt. "],["reletional-databases.html", "8 Reletional databases", " 8 Reletional databases Relational databases worden vaak gebruikt bij het combineren van verschillende datasets. Dit is erg handig voor experiment waar verschillende datasets worden gebruikt maar er wel overlappende waarden aanwezig zijn. SQL is een programmeertaal wat vaak gebruikt word voor het verwerken van informatie in een relational database. In deze opdracht wordt er laten zien dat er met sql gewerkt kan worden. Er zijn verschillende screenshots gemaakt van code van het programma DBeaver. In dit programma is er gewerkt met PostgreSQL. In dit voorbeeld wordt er een database gecreëerd voor een hypothetisch experiment waarbij er data is met informatie over planten en data over de kenmerken van de planten. Figure 8.1: Maken van een database en 2 tabellen Eerst wordt er een database gemaakt met de 2 tabellen erin waarin plant_id de verbindende key is tussen de 2 tabellen. Daarna wordt de data toegevoed aan de tabellen (dit is random gegeneerde data dus niet reëel) Figure 8.2: Data toevoegen aan tabellen Nadat de tabellen met data zijn gemaakt kan er met de data gewerkt worden. Kolommen kunnen bijvoorbeeld gefilterd worden en bepaalde kolommen kunnen geselecteerd worden. In de onderstaande afbeeldingen is dat laten zien. Selecteren van de data waarbij de kolom bloemkleur wordt gefilterd uit de tabel kenmerken: Figure 8.3: Select command Filteren van de data waarbij de kolom bladkleur wordt gefilterd op de bladeren die groen zijn uit de tabel kenmerken: Figure 8.4: Where command Ook kun je de 2 tabellen plant en kenmerken aan elkaar linken. Dit gebeurd door het inner_join command. Figure 8.5: Samenvoegen van 2 tabellen "],["r-package.html", "9 R package", " 9 R package R packages zijn functies die makkelijk opgeroepen en gebruikt kunnen worden. In deze opdracht wordt er zelf een R package gemaakt. In de package zitten 4 fucnties en een dataset. De functies zijn simepele R functies, zoals het veranderen van het datatype van een kolom. De package heet portfunctions (portfolio functions) en is te installeren door de volgende code: devtools::install_github(&quot;annavandonkersgoed/portfunctions&quot;) de package heeft meerdere functies met code die in de bestanden van dit portfolio staan. Korte uitleg over de functies (staat ook in de vignette): Datatype: Veranderd een kolom van een dataset naar het gewenste datatype. RemoveNA: Verwijderd NA waarden uit een kolom en zorgt ervoor dat de rijen met die waarden ook verwijderd worden. NotZero: Zorgt ervoor bij het maken van een grafiek dat de waarden niet door 0 gaan. ChangeColname: Verandert de kolomnaam naar een nieuwe naam. Dataset in de package: LandBird_Monitoring Link naar dataset Link naar repository De vignette kan bekeken worden door de volgende code: browseVignettes(&quot;portfunctions&quot;) "],["introductie-project-amr.html", "10 Introductie project AMR", " 10 Introductie project AMR Introductie voor het project antimicrobiële resistentie Tegenwoordig worden er veel antimicrobiële middelen gebruikt om infectie ziekten te behandelen en te voorkomen. Antibiotica, antivirale middelen en antiparasitaire middelen zijn voorbeelden van antimicrobiële middelen. Echter komt het steeds vaker voor dat bacteriën resistent worden tegen antimicrobiële middelen. Dit kan gebeuren doordat er al resistente bacteriën aanwezig zijn en zich vermenigvuldigen of door het te vaak gebruiken van een antibiotica. Doordat de bacteriën vaak in aanraking komen met het antibiotica gaat het zichzelf beschermen waardoor een resistentie wordt opgebouwd tegen het geneesmiddel. Het resistent worden tegen antimicrobiële middelen heet microbiële resistentie. (“Antimicrobial Resistance,” n.d.) (“Antibioticaresistentie | RIVM,” n.d.) Antimicrobiële resistentie is een wereldwijd probleem. Om het probleem op te lossen is er een one health approach. Deze aanpak zorgt ervoor dat mensen uit verschillende sectoren samen werken en communiceren om antimicrobiële resistentie te verminderen. Voorbeelden van de sectoren zijn voedselproductie, dier- en mileusector en de gezondheidssector. De verschillende sectoren werken samen aangezien het verspreiden van antimicorbiële resistentie invloed heeft op elke sector. Ziektes worden bijvoorbeeld overgedragen van dieren naar mensen. (“One Health | RIVM,” n.d.) In dit project specifiek wordt er gekeken naar het uitwisselen van het resistoom tussen bacteriën. In het resistoom zitten de genen die voor de resistentie tegen de antimicrobiële middelen zorgen. Door de uitwisseling worden dus meer bacteriën resistent. Er wordt bij dit project specifiek gekeken naar de uitwisseling van het resistoom tussen bacteriën in Nederland. Er wordt verder gewerkt op een bestaande workflow waar de data uit de SRA-databank is verkregen, opgeschoond en waarbij de reconstructie van het plasmide DNA van bacteriele genomen werd bepaald. (“Project AMR: Data Sciences for Biology 2,” n.d.) Het doel voor ons bij dit project is om van de workflow 1 pipeline te maken, ervoor zorgen dat nieuwe data makkelijk kan worden toegevoegd, een metadata bestand maken en de data visualiseren. Ook moeten er nog wat applicaties toegevoegd worden om verschillende onderdelen van de data te kunnen visualiseren waar de opdrachtgever geïnteresseerd in is. Een paar van deze onderdelen zijn het plasmide type, mobaliserbaarheid, resistentie genen en het clusteren van genen. De data moet gevisualiseerd worden in een R shiny app. Daarnaast is het doel van het project niet alleen het eindresultaat van de opdracht van de opdrachtgever, maar ook het leren om samen te werken bij een datascience project volgens de Guerrilla Analytics principes. Het is namelijk belangrijk om te leren werken met een version control software, in dit geval Git en Github om reproduceerbaar te werken. Ook is het erg belangrijk om een gestructureerde Github repository te hebben, zodat de opdrachtgever de pipeline makkelijk kan downloaden en kan gebruiken. Een voorbeeld van een gestructueerde repository is het hebben van een duidelijk project bord. Om een project soepel te laten voorlopen is het erg belangrijk om taken te hebben die duidelijk verwoord zijn en niet veel tijd kosten om uit gevoerd te worden. Dit zorgt voor een snelle samenwerking en voor een sneller eindproduct. (“Agile Teams,” n.d.) Niet alleen zorgt het project antimicrobiële resistentie ervoor dat er goed samen wordt gewerkt door een workflow op te stellen en reproduceerbaar te werken, ook laat het project zien hoe het op het werkveld eruit kan zien aangezien het project verkregen is door een externe opdrachtgever. "],["covid-19-data-parameters.html", "11 covid 19 data parameters", " 11 covid 19 data parameters In deze opdracht wordt er gewerkt met parameters. De parameters die gebruikt zijn in deze opdracht zijn contries (land in Europa), year (2020, 2021 of 2022) en months (reeks van periode maanden) De parameters zijn te vinden in de index van de bookdown en kunnen hier ook aangepast worden. Er worden grafieken gemaakt met de parameters om te laten zien dat er met parameters gewerkt kan worden. Op dit moment gebruikte parameters zijn: params: countries: “Netherlands” year: 2022 months: [1, 2, 3, 4, 5, 6] De gebruikte data is COVID-19 data Link naar data Als eerste stap word de data ingelezen. #Inladen van de data covid19_data &lt;- read.csv(here::here(&quot;data-raw&quot;, &quot;Data040&quot;, &quot;data.csv&quot;)) colnames(covid19_data)[7] &lt;- &quot;countries&quot; #Dataframe veranderen naar een tibble covid19_data_tbl &lt;- as_tibble(covid19_data) covid19_data_tbl$year &lt;- as.factor(covid19_data_tbl$year) Grafieken met parameter countries #Samenvatting van het aantal doden per land per jaar deaths_per_year &lt;- covid19_data_tbl %&gt;% filter(countries == params$countries) %&gt;% group_by(year) %&gt;% summarize(total_deaths = sum(deaths, na.rm = TRUE)) #Grafiek van het aantal doden per land per jaar plot_deaths_per_year &lt;- deaths_per_year %&gt;% ggplot(aes(x = year, y = total_deaths, fill = year)) + geom_col(color = &quot;black&quot;) + labs(title = paste(&quot;Amount of Deaths in&quot;, params$countries, &quot;per Year&quot;), x = &quot;Year&quot;, y = &quot;Amount of Deaths&quot;) + theme_classic() plot_deaths_per_year #Samenvatting van het aantal gevallen per land per jaar cases_per_year &lt;- cases_per_year &lt;- covid19_data_tbl %&gt;% filter(countries == params$countries) %&gt;% group_by(year) %&gt;% summarize(total_cases = sum(cases, na.rm = TRUE)) #Grafiek van het aantal gevallen per land per jaar plot_cases_per_year &lt;- cases_per_year %&gt;% ggplot(aes(x = year, y = total_cases, fill = year)) + geom_col(color = &quot;black&quot;) + labs(title = paste(&quot;Amount of cases in&quot;, params$countries, &quot;per Year&quot;), x = &quot;Year&quot;, y = &quot;Amount of cases&quot;) + theme_classic() plot_cases_per_year Grafieken met parameter year #Samenvatting aantal doden per jaar per land deaths_by_country &lt;- covid19_data_tbl %&gt;% group_by(year = params$year, countries) %&gt;% summarize(total_deaths_country = sum(deaths, na.rm = TRUE)) #Samenvatting aantal gevallen per jaar per land cases_by_country &lt;- covid19_data_tbl %&gt;% group_by(year = params$year, countries) %&gt;% summarize(total_cases_country = sum(cases, na.rm = TRUE)) #Grafiek aantal doden per jaar per land ggplot(deaths_by_country, aes(x = countries, y = total_deaths_country, fill = countries)) + geom_bar(stat = &quot;identity&quot;, color = &quot;black&quot;) + labs(title = paste(&quot;Deaths by Country in&quot;, params$year), x = &quot;Country&quot;, y = &quot;Total Deaths&quot;) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) #Grafiek aantal gevallen per jaar per land ggplot(cases_by_country, aes(x = countries, y = total_cases_country, fill = countries)) + geom_bar(stat = &quot;identity&quot;, color = &quot;black&quot;) + labs(title = paste(&quot;cases by Country in&quot;, params$year), x = &quot;Country&quot;, y = &quot;Total cases&quot;) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) Grafieken met parameter month #Filteren voor begin en eind maand filtered_data &lt;- covid19_data_tbl %&gt;% filter(countries == params$countries, year == params$year, month &gt;= params$start_month, month &lt;= params$end_month) #Grafiek aantal gevallen ggplot(filtered_data, aes(x = month, y = cases, fill = month)) + geom_col() + labs(title = paste(&quot;COVID-19 Cases in&quot;, params$countries, &quot;in&quot;, params$year), x = &quot;Month&quot;, y = &quot;Amounth of cases&quot;) #Grafiek aantal doden ggplot(filtered_data, aes(x = month, y = deaths, fill = month)) + geom_col() + labs(title = paste(&quot;COVID-19 Deaths in&quot;, params$countries, &quot;in&quot;, params$year), x = &quot;Month&quot;, y = &quot;Amount of deaths&quot;) "],["bronnen.html", "12 Bronnen", " 12 Bronnen “Agile Teams.” n.d. https://scaledagileframework.com/agile-teams/. “Antibioticaresistentie | RIVM.” n.d. https://www.rivm.nl/antibioticaresistentie. “Antimicrobial Resistance.” n.d. https://www.who.int/news-room/fact-sheets/detail/antimicrobial-resistance. “One Health | RIVM.” n.d. https://www.rivm.nl/en/one-health. “Project AMR: Data Sciences for Biology 2.” n.d. https://canvas.hu.nl/courses/39346/pages/project-amr. "]]
